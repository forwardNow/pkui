define(function(a){"use strict";var b=a("jquery"),c=a("template"),d={};return a("isLoading"),d.namespace="pkui.drawer",d.defaults={ajax:!0,url:"",model:"",showOverlay:!0,state:!1,isCreated:!1,container:".drawer-container",$container:null,$drawer:null,$drawerContent:null,$drawerButton:null,$overlay:null,onOpen:null,onHide:null,onDestroy:null,onLoad:null},d.clazz={drawer:"pkui-drawer",button:"pkui-drawer-button",overlay:"pkui-drawer-overlay",open:"pkui-drawer-open"},b.extend(d,{_create:function(){var a,c,e=this,f=b(this),g=f.data(d.namespace),h=g.options;a=b(h.container),a.size()>1&&(a=f.closest(h.container)),h.$container=a,"static"==a.css("position")&&a.css("position","relative"),h.showOverlay&&d.addOverlay.call(e),c=b('<div class="pkui-drawer"><button href="#" class="pkui-drawer-button">&#215;</button><div class="pkui-drawer-content"></div></div>').addClass(d.clazz.drawer).appendTo(a),h.$drawer=c,h.$drawerContent=c.find(".pkui-drawer-content"),h.$drawerButton=c.find(".pkui-drawer-button"),h.$drawerButton.on("click."+d.namespace,function(){d.destroy.call(e)}),a.scrollTop()>0&&c.css({top:a.scrollTop()}),h.isCreated=!0},init:function(){return this.each(function(){var a,c=b(this),e=c.data(d.namespace);e&&c.attr("isrendered")||(a=b.extend({},d.defaults,c.data(window.PKUI.componentOptionsHtmlAttr)),c.data(d.namespace,{options:a}),c.on("click."+d.namespace,function(){c.drawer("open")}),c.attr("isrendered",!0))})},getOptions:function(){var a=this.jquery?this:b(this);return a.data(d.namespace).options},open:function(){var a=b(this),e=d.getOptions.call(this);if(e.isCreated||d._create.call(this),e.$drawer.animate({left:"0"},function(){var b=e.onOpen;window[b]&&"function"==typeof window[b]&&window[b].call(a),a.trigger("open."+d.namespace)}),e.$container.addClass(d.clazz.open),e.$drawer.isLoading(),e.ajax&&e.url&&!e.model)b.ajax({url:e.url,type:"GET",cache:!1,dataType:"text"}).done(function(a){e.$drawerContent.html(a)}).fail(function(a,b){window.PKUI.console.error("[drawer]网络错误/登陆失效。",!0)}).always(function(){e.$drawer.isLoading("hide")});else if(e.url&&e.model){try{e.model=b.parseJSON(e.model)}catch(a){window.PKUI.console.info("model 不是序列化对象")}c.getModelAndView(e.url,e.model,function(a){e.$drawer.isLoading("hide"),e.$drawerContent.html(a)})}},hide:function(){var a=b(this),c=a.data(d.namespace).options;c.$drawer.animate({left:"100%"},function(){var b=c.onHide;c.$container.removeClass(d.clazz.open),c.$overlay.hide(),window[b]&&"function"==typeof window[b]&&window[b].call(a),a.trigger("hide."+d.namespace)})},destroy:function(){var a=b(this),c=a.data(d.namespace).options;c.$drawer.animate({left:"100%"},function(){var b=c.onDestroy;c.$container.removeClass(d.clazz.open),c.$drawer.remove(),c.$overlay.remove(),c.isCreated=!1,window[b]&&"function"==typeof window[b]&&window[b].call(a)})},addOverlay:function(){var a=b(this),c=b("<div>").addClass(d.clazz.overlay),e=a.data(d.namespace).options;return e.$overlay=c,e.$container.append(c),a}}),b.fn.drawer=function(a){return d[a]?d[a].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof a&&a?void console.error("Method "+a+" does not exist on ["+d.namespace+"]"):d.init.apply(this,arguments)},window.PKUI.component.drawer=b.fn.drawer,{}});